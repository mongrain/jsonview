{"version":3,"sources":["JSONEditorDemo.js","App.js","index.js"],"names":["JSONEditorDemo","idx","this","props","options","mode","onChangeText","e","JSON","parse","window","localStorage","setItem","jsoneditor","JSONEditor","container","val","getItem","set","destroy","className","ref","elem","Component","init","App","state","jsons","addEditor","setState","scrollTo","clean","clear","location","reload","document","addEventListener","item","target","tagName","querySelectorAll","forEach","inp","onkeyup","value","onClick","onDoubleClick","Array","from","length","map","setTimeout","storageVal","outerHTML","ReactDOM","render","getElementById"],"mappings":"uQAOqBA,G,8LACG,IACZC,EAAQC,KAAKC,MAAbF,IACFG,EAAU,CACdC,KAAM,OACNC,aAFc,SAEDC,GACX,IACEC,KAAKC,MAAMF,EAAG,KAAM,GACpBG,OAAOC,aAAaC,QAApB,uBAA4CX,GAAOM,GACnD,MAAMA,GACNG,OAAOC,aAAaC,QAApB,uBAA4CX,GAAO,OAIzDC,KAAKW,WAAa,IAAIC,IAAWZ,KAAKa,UAAWX,GAEjD,IAAMY,EAAMN,OAAOC,aAAaM,QAApB,uBAA4ChB,IACxD,GAAIe,EACF,IACEd,KAAKW,WAAWK,IAAIV,KAAKC,MAAMO,EAAK,KAAM,IAC1C,MAAMT,GACNL,KAAKW,WAAWK,IAAIF,M,6CAMpBd,KAAKW,YACPX,KAAKW,WAAWM,Y,6EAOV,IAAD,OACP,OACI,yBAAKC,UAAU,6BAA6BC,IAAK,SAAAC,GAAI,OAAI,EAAKP,UAAYO,S,GArCtCC,cCFxCC,G,OAAO,GA+EIC,E,kDAxEb,WAAatB,GAAQ,IAAD,8BAClB,cAAMA,IALRuB,MAAQ,CACNC,MAAO,GAGW,EAapBC,UAAY,WACVJ,GAAO,EACP,EAAKK,SAAS,CACZF,MAAQ,EAAKD,MAAMC,MAAQ,IAC1B,WACDjB,OAAOoB,SAAS,KAAoB,OAlBpB,EAsBpBC,MAAQ,WACNpB,aAAaqB,QACbtB,OAAOuB,SAASC,UAtBhBC,SAASC,iBAAiB,SAAS,SAAAC,GACL,UAAxBA,EAAKC,OAAOC,SACdJ,SAASK,iBAAiB,SAASC,SAAQ,SAACC,EAAKzC,GAC/CyC,EAAIC,QAAU,SAAUpC,GACtBI,aAAaC,QAAb,yBAAuCX,GAAOM,EAAE+B,OAAOM,cAN7C,E,qDA4BT,IACDjB,EAAUzB,KAAKwB,MAAfC,MAER,OACE,yBAAKP,UAAU,OACb,4BAAQyB,QAAS3C,KAAK0B,UAAWR,UAAU,OAA3C,OACA,4BAAQ0B,cAAe5C,KAAK6B,MAAOX,UAAU,YAA7C,SAEA,yBAAKA,UAAU,YACZ2B,MAAMC,KAAK,CAAEC,OAAQtB,IACnBuB,KAAI,SAACb,EAAMpC,GAAP,OAAe,kBAAC,EAAD,CAAgBA,IAAKA,YAGvCkD,YAAW,WACThB,SAASK,iBAAiB,yBACvBC,SAAQ,SAACJ,EAAMpC,GACd,IAAIe,EAAM,GACV,OAAQf,GACN,KAAK,EACHe,EAAM,WACN,MACF,KAAK,EACHA,EAAM,kBACN,MACF,KAAK,EACHA,EAAM,OAGV,IAAMoC,EAAazC,aAAaM,QAAb,yBAAuChB,IACtDmD,IACFpC,EAAMoC,GAGRf,EAAKgB,UAAL,wBAAmC7B,EAAa,GAANR,EAA1C,wHAEH,S,GApECO,aCFlB+B,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,U","file":"static/js/main.7b6a177e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport JSONEditor from 'jsoneditor';\r\nimport 'jsoneditor/dist/jsoneditor.css';\r\n\r\nimport './JSONEditorDemo.css';\r\n\r\nexport default class JSONEditorDemo extends Component {\r\n  componentDidMount () {\r\n    const { idx } = this.props\r\n    const options = {\r\n      mode: 'code',\r\n      onChangeText(e) {\r\n        try {\r\n          JSON.parse(e, null, 2)\r\n          window.localStorage.setItem(`__json_edit__${idx}`, e)\r\n        } catch(e) {\r\n          window.localStorage.setItem(`__json_edit__${idx}`, '')\r\n        }\r\n      }\r\n    };\r\n    this.jsoneditor = new JSONEditor(this.container, options);\r\n\r\n    const val = window.localStorage.getItem(`__json_edit__${idx}`)\r\n    if (val) {\r\n      try {\r\n        this.jsoneditor.set(JSON.parse(val, null, 2));\r\n      } catch(e) {\r\n        this.jsoneditor.set(val);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    if (this.jsoneditor) {\r\n      this.jsoneditor.destroy();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"jsoneditor-react-container\" ref={elem => this.container = elem} />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport JSONEditorDemo from './JSONEditorDemo';\r\nimport './App.css';\r\n\r\nlet init = false\r\n\r\nclass App extends Component {\r\n  state = {\r\n    jsons: 3\r\n  };\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    document.addEventListener('click', item => {\r\n      if (item.target.tagName === 'INPUT') {\r\n        document.querySelectorAll('input').forEach((inp, idx) => {\r\n          inp.onkeyup = function (e) {\r\n            localStorage.setItem(`__editor__name_${idx}`, e.target.value)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  addEditor = () => {\r\n    init = true\r\n    this.setState({\r\n      jsons: (this.state.jsons + 1)\r\n    }, () => {\r\n      window.scrollTo(999999999999999999, 0)\r\n    })\r\n  }\r\n\r\n  clean = () => {\r\n    localStorage.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n  render () {\r\n    const { jsons } = this.state\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <button onClick={this.addEditor} className=\"btn\">Ins</button>\r\n        <button onDoubleClick={this.clean} className=\"btn btn2\">Clear</button>\r\n\r\n        <div className=\"contents\">\r\n          {Array.from({ length: jsons })\r\n            .map((item, idx) => <JSONEditorDemo idx={idx} />)}\r\n          {\r\n            (() => {\r\n              setTimeout(() => {\r\n                document.querySelectorAll('.jsoneditor-poweredBy')\r\n                  .forEach((item, idx) => {\r\n                    let val = ''\r\n                    switch (idx) {\r\n                      case 0:\r\n                        val = 'web_menu';\r\n                        break;\r\n                      case 1:\r\n                        val = 'menu_permission';\r\n                        break;\r\n                      case 2:\r\n                        val = 'pane';\r\n                        break;\r\n                    }\r\n                    const storageVal = localStorage.getItem(`__editor__name_${idx}`)\r\n                    if (storageVal) {\r\n                      val = storageVal\r\n                    }\r\n\r\n                    item.outerHTML = `<input value=\"${!init ? val : ''}\" style=\"margin-top: 3px;outline: none;display: inline-block;position: absolute;right: 0;margin-right: 20px;\"/>`\r\n                  })\r\n              }, 1)\r\n            })()\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}